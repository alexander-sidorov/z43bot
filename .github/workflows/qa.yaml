name: QA

on: [push]

env:
  ADMIN_PASSWORD: "1"
  BOT_TOKEN: "xxx-token"
  PORT: "8000"
  PYTHONPATH: "src"
  SERVICE_URL: "http://localhost:8000"
  DATABASE_URL: "postgresql://xxx:xxx@postgres:5432/xxx"

jobs:
  full-build-and-qa:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: xxx
          POSTGRES_PASSWORD: xxx
          POSTGRES_USER: xxx
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
    steps:
      - name: pull code from repo
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: set up pipenv
        run: pip install pipenv
      - name: init virtualenv
        run: |
          mkdir -p .venv
          pipenv --three
      - name: cache packages
        id: venv-packages-cache
        uses: actions/cache@v2
        with:
          path: ./.venv/
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: install packages
        if: ${{ !steps.venv-packages-cache.outputs.cache-hit }}
        run: pipenv install --dev
      - name: run production web server
        run: pipenv run make run-prod &
      - name: release
        run: pipenv run make release
      - name: qa
        run: pipenv run make qa
