name: QA

on: [push]

env:
  ADMIN_PASSWORD: "1"
  BOT_TOKEN: "xxx-token"
  PORT: "8000"
  PYTHONPATH: "src"
  SERVICE_URL: "http://localhost:8000"

jobs:
  code:
    runs-on: ubuntu-latest
    steps:
      - name: pull code from repo
        uses: actions/checkout@v2
      - name: upload code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: |
            /home/runner/work/z43bot/
  runtime:
    runs-on: ubuntu-latest
    steps:
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: set up pipenv
        run: pip install pipenv
      - name: init virtualenv
        run: |
          mkdir -p .venv
          pipenv --three
      - name: upload runtime
        uses: actions/upload-artifact@v2
        with:
          name: runtime
          path: |
            /opt/hostedtoolcache/Python/
            ./venv/
  venv:
    runs-on: ubuntu-latest
    needs: [code, runtime]
    steps:
      - name: download code
        uses: actions/download-artifact@v2
        with:
          name: code
      - name: download runtime
        uses: actions/download-artifact@v2
        with:
          name: runtime
      - name: cache packages
        id: venv-packages-cache
        uses: actions/cache@v2
        with:
          path: ./.venv/
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: install packages
        if: ${{ !steps.venv-packages-cache.outputs.cache-hit }}
        run: pipenv install --dev
      - name: upload venv
        uses: actions/upload-artifact@v2
        with:
          name: venv
          path: |
            ./venv/
  servers:
    runs-on: ubuntu-latest
    needs: venv
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: run production web server
        run: pipenv run make run-prod &
  tests:
    runs-on: ubuntu-latest
    needs: servers
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: run tests
        run: pipenv run make run-tests
  static-analysis:
    runs-on: ubuntu-latest
    needs: venv
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: analyze types
        run: pipenv run make check-types
  imports:
    runs-on: ubuntu-latest
    needs: venv
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: analyze imports
        run: pipenv run make check-imports
  code-format:
    runs-on: ubuntu-latest
    needs: venv
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: check code format
        run: pipenv run make check-code-style
  linting:
    runs-on: ubuntu-latest
    needs: venv
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
      - name: run linters
        run: pipenv run make run-static-code-analysis
